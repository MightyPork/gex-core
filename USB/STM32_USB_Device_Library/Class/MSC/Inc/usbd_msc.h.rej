--- Middlewares/ST/STM32_USB_Device_Library/Class/MSC/Inc/usbd_msc.h	(date 1511202099000)
+++ Middlewares/ST/STM32_USB_Device_Library/Class/MSC/Inc/usbd_msc.h	(revision )
@@ -58,9 +58,10 @@
 #define BOT_RESET                    0xFF
 #define USB_MSC_CONFIG_DESC_SIZ      32
  
-
+#ifndef MSC_CUSTOM_EPS
 #define MSC_EPIN_ADDR                0x81 
-#define MSC_EPOUT_ADDR               0x01 
+#define MSC_EPOUT_ADDR               0x01
+#endif
 
 /**
   * @}
@@ -107,7 +108,7 @@
 USBD_MSC_BOT_HandleTypeDef; 
 
 /* Structure for MSC process */
-extern USBD_ClassTypeDef  USBD_MSC;
+extern USBD_ClassTypeDef USBD_MSC;
 #define USBD_MSC_CLASS    &USBD_MSC
 
 uint8_t  USBD_MSC_RegisterStorage  (USBD_HandleTypeDef   *pdev, 
@@ -118,8 +119,34 @@
 
 /**
   * @}
-  */ 
+  */
 
+// XXX "static" moved here for use in composite driver
+
+uint8_t  USBD_MSC_Init (USBD_HandleTypeDef *pdev,
+                        uint8_t cfgidx);
+
+uint8_t  USBD_MSC_DeInit (USBD_HandleTypeDef *pdev,
+                          uint8_t cfgidx);
+
+uint8_t  USBD_MSC_Setup (USBD_HandleTypeDef *pdev,
+                         USBD_SetupReqTypedef *req);
+
+uint8_t  USBD_MSC_DataIn (USBD_HandleTypeDef *pdev,
+                          uint8_t epnum);
+
+
+uint8_t  USBD_MSC_DataOut (USBD_HandleTypeDef *pdev,
+                           uint8_t epnum);
+
+uint8_t  *USBD_MSC_GetHSCfgDesc (uint16_t *length);
+
+uint8_t  *USBD_MSC_GetFSCfgDesc (uint16_t *length);
+
+uint8_t  *USBD_MSC_GetOtherSpeedCfgDesc (uint16_t *length);
+
+uint8_t  *USBD_MSC_GetDeviceQualifierDescriptor (uint16_t *length);
+
 #ifdef __cplusplus
 }
 #endif
